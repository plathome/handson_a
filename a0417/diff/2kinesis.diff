--- ti_simplebutton.js	2015-04-08 15:58:03.755375069 +0900
+++ ti_simplebutton2kinesis.js	2015-04-08 17:25:14.194665400 +0900
@@ -1,15 +1,37 @@
 /*
-* $ npm install sandeepmistry/node-sensortag ## (require `libbluetooth-dev`)
-* $ TI_UUID=your_ti_sensor_tag_UUID node this_file.js
+* $ npm install sandeepmistry/node-sensortag aws-sdk moment-timezone
+* $ TI_UUID=your_ti_sensor_tag_UUID AK_STREAM=your_kinesis_stream node this_file.js
 */
-var myUUID = process.env["TI_UUID"] || "YOUR_TI_sensor_tag_UUID";
+var myUUID   = process.env["TI_UUID"]   || "YOUR_TI_sensor_tag_UUID";
+var mySTREAM = process.env["AK_STREAM"] || "YOUR_KINESIS_STREAM";
+
+var AWS = require("aws-sdk");
+AWS.config.region = "us-east-1";
+/* Using ~/.aws/credentials */
+var kinesis = new AWS.Kinesis();
+console.info("Using AWS Kinesis Stream: " + mySTREAM);
+
+var moment = require("moment-timezone");
 
 function ti_simple_key(conned_obj) {
 	conned_obj.notifySimpleKey(function() {
 		console.info("ready: notifySimpleKey");
 		console.info("/* left right (true = pushed, false = released) */");
 		conned_obj.on("simpleKeyChange", function(left, right) { /* run per pushed button */
-			console.log(left, right);
+			var data = {
+				device_uuid: conned_obj.uuid,
+				time: moment().tz("Asia/Tokyo").format(),
+				payload: {L: left, R: right}
+			};
+			var kparams = {Data: JSON.stringify(data), PartitionKey: "any", StreamName: mySTREAM};
+			kinesis.putRecord(kparams, function(err, data) {
+				if (err) {
+					console.log(err, err.stack);
+				} else {
+					console.log(kparams);
+					console.log(data);
+				}
+			});
 		});
 	});
 }
